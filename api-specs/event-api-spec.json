{
  "openapi": "3.0.0",
  "info": {
    "title": "Event Management API",
    "version": "1.0.0",
    "description": "API documentation for a full-featured event management platform supporting onsite, virtual, and hybrid events with Zoom integration, participant management, scheduling, gamification, and more."
  },
  "paths": {
    "/api/v1/events": {
      "post": {
        "summary": "Create a new event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "event_type": { "type": "string" },
                  "start_time": { "type": "string" },
                  "end_time": { "type": "string" },
                  "venue": { "type": "string" },
                  "zoom_meeting_link": { "type": "string" }
                },
                "required": ["title", "event_type", "start_time", "end_time"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Event created" }
        }
      }
    },
    "/api/v1/participants/register": {
      "post": {
        "summary": "Register a participant for an event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_id": { "type": "string" },
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                },
                "required": ["event_id", "name", "email"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Participant registered" }
        }
      }
    },
    "/api/v1/blast-messages/send": {
      "post": {
        "summary": "Send bulk message to event participants",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_id": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["event_id", "message"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Messages sent" }
        }
      }
    },
    "/api/v1/countdown/{event_id}": {
      "get": {
        "summary": "Get countdown for an event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Countdown data" }
        }
      }
    },
    "/api/v1/matchmaking/{event_id}": {
      "get": {
        "summary": "AI-based participant matchmaking recommendations",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Match recommendations" }
        }
      }
    },
    "/api/v1/schedules/generate": {
      "post": {
        "summary": "Generate a smart event schedule",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_id": { "type": "string" }
                },
                "required": ["event_id"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Schedule generated" }
        }
      }
    },
    "/api/v1/post-event-reports/{event_id}": {
      "get": {
        "summary": "Retrieve AI-generated post-event report",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Post-event report" }
        }
      }
    },
    "/api/v1/event-highlights/{event_id}": {
      "get": {
        "summary": "Retrieve event highlights and media replays",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Highlights list" }
        }
      }
    },
    "/api/v1/vendors": {
      "get": {
        "summary": "Retrieve vendor marketplace listings",
        "responses": {
          "200": { "description": "Vendor list" }
        }
      }
    },
    "/api/v1/vendors/register": {
  "post": {
    "summary": "Register a new vendor",
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "services": { "type": "array", "items": { "type": "string" } },
              "contact_person": { "type": "string" },
              "phone": { "type": "string" },
              "email": { "type": "string" }
            },
            "required": ["name", "services", "contact_person", "phone"]
          }
        }
      }
    },
    "responses": {
      "201": { "description": "Vendor registered successfully" }
    }
  }
},
    "/api/v1/service-orders": {
      "post": {
        "summary": "Order services for an event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendor_id": { "type": "string" },
                  "service": { "type": "string" },
                  "event_id": { "type": "string" }
                },
                "required": ["vendor_id", "service", "event_id"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Service order placed" }
        }
      }
    },
    "/api/v1/waitlists/{event_id}": {
      "post": {
        "summary": "Add participant to event waitlist",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" }
                },
                "required": ["name", "email"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Added to waitlist" }
        }
      }
    },
    "/api/v1/gamification/badges": {
      "post": {
        "summary": "Assign gamification badge",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": { "type": "string" },
                  "badge": { "type": "string" }
                },
                "required": ["participant_id", "badge"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Badge assigned" }
        }
      }
    },
    "/api/v1/gamification/leaderboard/{event_id}": {
      "get": {
        "summary": "Get leaderboard for event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Leaderboard list" }
        }
      }
    },
    "/api/v1/swag-bags/{event_id}": {
      "get": {
        "summary": "Retrieve event swag bag content",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Swag bag content" }
        }
      }
    },
    "/api/v1/feedback/{event_id}": {
      "post": {
        "summary": "Submit event feedback",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": { "type": "string" },
                  "rating": { "type": "integer" },
                  "comments": { "type": "string" }
                },
                "required": ["participant_id", "rating"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Feedback submitted" }
        }
      }
    },
    "/api/v1/messaging/send": {
      "post": {
        "summary": "Send private message to participant",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipient_id": { "type": "string" },
                  "message": { "type": "string" }
                },
                "required": ["recipient_id", "message"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Message sent" }
        }
      }
    },
    "/api/v1/sponsors/{event_id}": {
      "get": {
        "summary": "Retrieve sponsor listing",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Sponsors list" }
        }
      }
    },
    "/api/v1/sessions/attendance": {
      "post": {
        "summary": "Record participant session attendance",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": { "type": "string" },
                  "session_id": { "type": "string" }
                },
                "required": ["participant_id", "session_id"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Attendance recorded" }
        }
      }
    },
    "/api/v1/notifications/send": {
      "post": {
        "summary": "Send notification to participants",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recipient_ids": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "message": { "type": "string" }
                },
                "required": ["recipient_ids", "message"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Notifications sent" }
        }
      }
    },
    "/api/v1/participants/{participant_id}": {
      "get": {
        "summary": "Get participant profile",
        "parameters": [
          {
            "name": "participant_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Participant profile retrieved" }
        }
      }
    },
    "/api/v1/events/{event_id}": {
      "put": {
        "summary": "Update an existing event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "description": { "type": "string" },
                  "start_time": { "type": "string" },
                  "end_time": { "type": "string" },
                  "venue": { "type": "string" },
                  "zoom_meeting_link": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Event updated" }
        }
      },
      "delete": {
        "summary": "Delete an event",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": { "description": "Event deleted" }
        }
      }
    },
    "/api/v1/events/{event_id}/participants": {
      "get": {
        "summary": "List participants for an event with pagination and filtering",
        "parameters": [
          { "name": "event_id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "page", "in": "query", "schema": { "type": "integer", "default": 1 } },
          { "name": "per_page", "in": "query", "schema": { "type": "integer", "default": 20 } },
          { "name": "search", "in": "query", "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Paginated participants list retrieved" }
        }
      }
    },
    "/api/v1/event-categories": {
      "get": {
        "summary": "Retrieve list of event categories",
        "responses": {
          "200": { "description": "Event categories list" }
        }
      }
    },
    "/api/v1/tickets/purchase": {
      "post": {
        "summary": "Purchase event ticket and generate QR code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event_id": { "type": "string" },
                  "participant_id": { "type": "string" },
                  "ticket_type": { "type": "string" },
                  "payment_reference": { "type": "string" }
                },
                "required": ["event_id", "participant_id", "ticket_type", "payment_reference"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Ticket purchased and QR code issued" }
        }
      }
    },
    "/api/v1/sessions/{session_id}/ratings": {
      "post": {
        "summary": "Submit rating and review for a session",
        "parameters": [
          { "name": "session_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "participant_id": { "type": "string" },
                  "rating": { "type": "integer" },
                  "comments": { "type": "string" }
                },
                "required": ["participant_id", "rating"]
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Session rating submitted" }
        }
      }
    },
    "/api/v1/analytics/dashboard": {
      "get": {
        "summary": "Retrieve event analytics dashboard summary",
        "parameters": [
          { "name": "event_id", "in": "query", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Event analytics data retrieved" }
        }
      }
    }
  }
}